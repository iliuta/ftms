name: FTMS CI

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  ARTIFACT_SUFFIX: ${{ github.ref_type == 'tag' && github.ref_name || (github.event_name == 'pull_request' && format('{0}-{1}', github.head_ref, github.event.number) || 'latest') }}

jobs:
  prepare-env:
    runs-on: ubuntu-latest
    outputs:
      slug: ${{ steps.sanitize.outputs.slug }}
    steps:
      - name: Sanitize artifact suffix
        id: sanitize
        shell: bash
        run: |
          slug="${{ env.ARTIFACT_SUFFIX }}"
          echo "slug=${slug//\//-}" >> $GITHUB_OUTPUT

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.32.7'
      - name: Cache Flutter dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
      - name: Install dependencies
        run: flutter pub get
      - name: Check for compile errors (flutter build apk)
        run: flutter analyze

  test:
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.32.7'
      - name: Restore Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
      - name: Run tests
        run: flutter test --no-pub

  build-windows:
    runs-on: windows-latest
    needs: [test, prepare-env]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Flutter SDK
      uses: actions/cache@v4
      with:
        path: |
          ${{ runner.tool_cache }}/flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.7'
        channel: 'stable'
        cache: true
        
    - name: Cache pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.PUB_CACHE }}
          ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-
        
    - name: Install dependencies
      run: 
        flutter clean
        flutter pub get
      
    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop
      
    - name: Build Windows app
      run: flutter build windows --verbose --release
      
    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: windows-build-${{ env.ARTIFACT_SUFFIX }}
        path: build/windows/x64/runner/Release/

  build-macos:
    runs-on: macos-latest
    needs: [test, prepare-env]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Flutter SDK
      uses: actions/cache@v4
      with:
        path: |
          ${{ runner.tool_cache }}/flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.7'
        channel: 'stable'
        cache: true
        
    - name: Cache pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.PUB_CACHE }}
          ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Enable macOS desktop
      run: flutter config --enable-macos-desktop
      
    - name: Build macOS app
      run: |
        (cd macos && xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -destination 'platform=macOS' -allowProvisioningUpdates build)
        flutter build macos --release --verbose
      
    - name: Create DMG (optional)
      run: |
        # Install create-dmg if you want to create a DMG installer
        # brew install create-dmg
        # create-dmg --volname "PowerTrain" --window-size 800 400 --icon-size 100 --app-drop-link 600 185 "PowerTrain.dmg" "build/macos/Build/Products/Release/"
        echo "macOS build completed"

    - name: Sanitize artifact suffix
      shell: bash
      run: |
        slug="${{ env.ARTIFACT_SUFFIX }}"
        echo "ARTIFACT_SLUG=${slug//\//-}" >> $GITHUB_ENV
      
    - name: Upload macOS build
      uses: actions/upload-artifact@v4
      with:
        name: macos-build-${{ env.ARTIFACT_SLUG }}
        path: build/macos/Build/Products/Release/

  build-android:
    runs-on: ubuntu-latest
    needs: [analyze, test, prepare-env]
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - name: Cache Flutter SDK
      uses: actions/cache@v4
      with:
        path: |
          ${{ runner.tool_cache }}/flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.7'
        channel: 'stable'
        cache: true
        
    - name: Cache pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.PUB_CACHE }}
          ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-
          
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Android APK (debug)
      run: flutter build apk --debug
      
    - name: Build Android App Bundle (debug)
      run: flutter build appbundle --debug
      
    - name: Sanitize artifact suffix
      shell: bash
      run: |
        slug="${{ env.ARTIFACT_SUFFIX }}"
        echo "ARTIFACT_SLUG=${slug//\//-}" >> $GITHUB_ENV
      
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ env.ARTIFACT_SLUG }}
        path: build/app/outputs/flutter-apk/app-debug.apk
        
    - name: Upload Android App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: android-aab-${{ env.ARTIFACT_SLUG }}
        path: build/app/outputs/bundle/debug/app-debug.aab
